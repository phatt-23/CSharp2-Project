@using CoworkingApp.Models.DataModels
@model IEnumerable<CoworkingApp.Models.DataModels.Reservation>

@{
    ViewBag.Title = "My reservation";
    Layout = "_Layout";
}

<page id="reservation-index-page">
    <h2>My Reservation</h2>

    @Html.ActionLink("New reservation", "Create")

    <!-- Display the error messages if there are any -->
    @if (ViewData.ModelState != null && ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
    {
        <div class="alert alert-danger">
            <h3>Error</h3>
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <table>
        <thead>
            <th>Workspace</th>
            <th>Start Time</th>
            <th>End Time</th>
            <th>Price</th>
            <th>Created At</th>
            <th>Has Taken Place</th>
            <th>Actions</th>
        </thead>
        <tbody>
            @foreach (var reservation in Model.OrderBy(x => x.StartTime))
            {
                <tr>
                    <td><a asp-controller="Workspace" asp-action="Detail" asp-route-id="@reservation.WorkspaceId">@reservation.Workspace.Name</a></td>
                    <td>@reservation.StartTime</td>
                    <td>@reservation.EndTime</td>
                    <td>@(reservation.TotalPrice)$</td>
                    <td>@reservation.CreatedAt</td>
                    <td>@(reservation.StartTime >= DateTime.Now ? "No" : "Yes")</td>
                    <td>
                        @Html.ActionLink(
                                 linkText: "Detail",
                                 actionName: "Detail",
                                 controllerName: "Reservation",
                                 routeValues: new { id = reservation.ReservationId })

                        @Html.ActionLink(
                                 linkText: "Edit",
                                 actionName: "Edit",
                                 controllerName: "Reservation",
                                 routeValues: new { id = reservation.ReservationId },
                                 htmlAttributes: new { style = reservation.HasStarted() ? "display:none;" : "" })

                        @using (Html.BeginForm(
                            actionName: "Cancel",
                            controllerName: "Reservation",
                            routeValues: new { id = reservation.ReservationId },
                            method: FormMethod.Post,
                            antiforgery: true,
                            htmlAttributes: new { @styles = reservation.HasStarted() ? "display:none;" : "display:inline;" }))
                            {
                                <button disabled="@reservation.HasStarted()" type="submit">
                                    Cancel
                                </button>
                            }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</page>

@section Styles {
    <style>
        #reservation-index-page table {
            border-collapse: collapse;
            width: 100%;
        }

        #reservation-index-page th,
        #reservation-index-page td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        #reservation-index-page td form {
            display: inline;
            margin-left: 8px; 
        }
    </style>
}
